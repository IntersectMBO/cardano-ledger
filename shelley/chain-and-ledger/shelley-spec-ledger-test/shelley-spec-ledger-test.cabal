cabal-version: 2.2

name:                shelley-spec-ledger-test
version:             0.1.0.0
description:         Test helpers from shelley-spec-ledger exposed to other packages
license:             Apache-2.0
author:              IOHK Formal Methods Team
maintainer:          formal.methods@iohk.io
build-type:          Simple

extra-source-files:
  cddl-files/shelley.cddl
  cddl-files/real/crypto.cddl
  cddl-files/mock/extras.cddl

source-repository head
  type: git
  location: https://github.com/input-output-hk/cardano-ledger-specs.git

flag development
    description: Disable '-Werror'
    default: False
    manual: True

common base
  build-depends:      base >= 4.12 && < 4.15

common project-config
  default-language:   Haskell2010

  ghc-options:        -Wall
                      -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wredundant-constraints
                      -Wunused-packages

  if (!flag(development))
    ghc-options:      -Werror

library
  import:             base, project-config
  hs-source-dirs:     src
                      test
  exposed-modules:
    Test.Cardano.Crypto.VRF.Fake
    Test.Shelley.Spec.Ledger.BenchmarkFunctions
    Test.Shelley.Spec.Ledger.ConcreteCryptoTypes
    Test.Shelley.Spec.Ledger.Examples.Cast
    Test.Shelley.Spec.Ledger.Generator.Block
    Test.Shelley.Spec.Ledger.Generator.Constants
    Test.Shelley.Spec.Ledger.Generator.Core
    Test.Shelley.Spec.Ledger.Generator.Delegation
    Test.Shelley.Spec.Ledger.Generator.Metadata
    Test.Shelley.Spec.Ledger.Generator.Presets
    Test.Shelley.Spec.Ledger.Generator.Trace.Chain
    Test.Shelley.Spec.Ledger.Generator.Trace.DCert
    Test.Shelley.Spec.Ledger.Generator.Trace.Ledger
    Test.Shelley.Spec.Ledger.Generator.Update
    Test.Shelley.Spec.Ledger.Generator.Utxo
    Test.Shelley.Spec.Ledger.Generator.EraGen
    Test.Shelley.Spec.Ledger.Generator.ScriptClass
    Test.Shelley.Spec.Ledger.Generator.ShelleyEraGen
    Test.Shelley.Spec.Ledger.Orphans
    Test.Shelley.Spec.Ledger.Serialisation.CDDLUtils
    Test.Shelley.Spec.Ledger.Serialisation.Generators
    Test.Shelley.Spec.Ledger.Serialisation.EraIndepGenerators
    Test.Shelley.Spec.Ledger.Serialisation.Generators.Bootstrap
    Test.Shelley.Spec.Ledger.Serialisation.Generators.Genesis
    Test.Shelley.Spec.Ledger.Serialisation.GoldenUtils
    Test.Shelley.Spec.Ledger.Shrinkers
    Test.Shelley.Spec.Ledger.Utils
    Test.Shelley.Spec.Ledger.PropertyTests
    Test.Shelley.Spec.Ledger.Rules.TestChain
    Test.TestScenario
  other-modules:
      Test.Shelley.Spec.Ledger.Address.Bootstrap
      Test.Shelley.Spec.Ledger.Address.CompactAddr
      Test.Shelley.Spec.Ledger.ByronTranslation
      Test.Shelley.Spec.Ledger.Examples.Federation
      Test.Shelley.Spec.Ledger.Rules.ClassifyTraces
      Test.Shelley.Spec.Ledger.Rules.TestDeleg
      Test.Shelley.Spec.Ledger.Rules.TestPool
      Test.Shelley.Spec.Ledger.Rules.TestPoolreap
      Test.Shelley.Spec.Ledger.ShelleyTranslation
  build-depends:
    base16-bytestring >= 1,
    bytestring,
    cardano-binary,
    cardano-crypto-class,
    cardano-crypto-test,
    cardano-crypto-wrapper,
    cardano-crypto,
    cardano-ledger-byron,
    cardano-ledger-byron-test,
    cardano-ledger-core,
    cardano-prelude-test,
    cardano-prelude,
    cardano-slotting,
    cborg,
    containers,
    data-default-class,
    directory,
    generic-random,
    hedgehog-quickcheck,
    hedgehog >= 1.0.4,
    iproute,
    nothunks,
    process-extras,
    QuickCheck >= 2.13.2,
    shelley-spec-ledger,
    small-steps-test,
    small-steps,
    strict-containers,
    tasty-hunit,
    tasty-quickcheck,
    tasty,
    text,
    time,
    transformers

test-suite shelley-spec-ledger-test
  import:             base, project-config

  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  other-modules:
      Test.Control.Iterate.SetAlgebra
      Test.Shelley.Spec.Ledger.Address.Bootstrap
      Test.Shelley.Spec.Ledger.Address.CompactAddr
      Test.Shelley.Spec.Ledger.ByronTranslation
      Test.Shelley.Spec.Ledger.Examples
      Test.Shelley.Spec.Ledger.Examples.Cast
      Test.Shelley.Spec.Ledger.Examples.Combinators
      Test.Shelley.Spec.Ledger.Examples.EmptyBlock
      Test.Shelley.Spec.Ledger.Examples.Federation
      Test.Shelley.Spec.Ledger.Examples.Init
      Test.Shelley.Spec.Ledger.Examples.GenesisDelegation
      Test.Shelley.Spec.Ledger.Examples.NetworkID
      Test.Shelley.Spec.Ledger.Examples.Mir
      Test.Shelley.Spec.Ledger.Examples.MirTransfer
      Test.Shelley.Spec.Ledger.Examples.PoolLifetime
      Test.Shelley.Spec.Ledger.Examples.PoolReReg
      Test.Shelley.Spec.Ledger.Examples.TwoPools
      Test.Shelley.Spec.Ledger.Examples.Updates
      Test.Shelley.Spec.Ledger.Fees
      Test.Shelley.Spec.Ledger.MultiSigExamples
      Test.Shelley.Spec.Ledger.Pretty
      Test.Shelley.Spec.Ledger.PropertyTests
      Test.Shelley.Spec.Ledger.Rewards
      Test.Shelley.Spec.Ledger.Rules.ClassifyTraces
      Test.Shelley.Spec.Ledger.Rules.TestChain
      Test.Shelley.Spec.Ledger.Rules.TestDeleg
      Test.Shelley.Spec.Ledger.Rules.TestPool
      Test.Shelley.Spec.Ledger.Rules.TestPoolreap
      Test.Shelley.Spec.Ledger.SafeHash
      Test.Shelley.Spec.Ledger.Serialisation
      Test.Shelley.Spec.Ledger.Serialisation.CDDL
      Test.Shelley.Spec.Ledger.Serialisation.Golden.Address
      Test.Shelley.Spec.Ledger.Serialisation.Golden.Encoding
      Test.Shelley.Spec.Ledger.Serialisation.Golden.Genesis
      Test.Shelley.Spec.Ledger.Serialisation.Tripping.CBOR
      Test.Shelley.Spec.Ledger.Serialisation.Tripping.JSON
      Test.Shelley.Spec.Ledger.ShelleyTranslation
      Test.Shelley.Spec.Ledger.STSTests
      Test.Shelley.Spec.Ledger.UnitTests
      Test.TestScenario

  hs-source-dirs:      test
  ghc-options:
      -threaded
      -rtsopts
      -with-rtsopts=-N
      -- We set a bound here so that we're alerted of potential space
      -- leaks in our generators (or test) code.
      --
      -- The 4 megabytes stack bound and 200 megabytes heap bound were
      -- determined ad-hoc.
      "-with-rtsopts=-K4m -M250m"
  build-depends:
      aeson,
      base16-bytestring >= 1,
      binary,
      bytestring,
      cardano-binary,
      cardano-crypto-class,
      cardano-crypto-praos,
      cardano-crypto-test,
      cardano-crypto-wrapper,
      cardano-crypto,
      cardano-ledger-byron-test,
      cardano-ledger-byron,
      cardano-ledger-core,
      cardano-prelude-test,
      cardano-prelude,
      cardano-slotting,
      cborg,
      containers,
      data-default-class,
      groups,
      hedgehog >= 1.0.4,
      hedgehog-quickcheck,
      iproute,
      prettyprinter,
      QuickCheck,
      scientific,
      shelley-spec-ledger-test,
      shelley-spec-ledger,
      small-steps-test,
      small-steps,
      strict-containers,
      tasty-hedgehog,
      tasty-hunit,
      tasty-quickcheck,
      tasty,
      time,Â 
      transformers


benchmark mainbench
  import:             base, project-config

  type:             exitcode-stdio-1.0
  hs-source-dirs:
    bench
    test
  main-is:          Main.hs
  other-modules:
    Bench.Control.Iterate.SetAlgebra.Bimap,
    BenchUTxOAggregate,
    BenchValidation,
    Shelley.Spec.Ledger.Bench.Gen
    Shelley.Spec.Ledger.Bench.Rewards
    Test.Shelley.Spec.Ledger.Examples.Cast

  build-depends:
    bytestring,
    cardano-crypto-class,
    cardano-crypto-praos,
    cardano-ledger-core,
    cardano-prelude,
    cardano-slotting,
    containers,
    criterion,
    data-default-class,
    deepseq,
    mtl,
    QuickCheck,
    shelley-spec-ledger-test,
    shelley-spec-ledger,
    small-steps,
    small-steps-test,
    strict-containers,
    transformers
  ghc-options:
      -threaded
      -rtsopts
      -with-rtsopts=-N
      -O
