name: Haskell CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      # Modify this value to "invalidate" the cabal cache.
      CABAL_CACHE_VERSION: "2022-12-30"

      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

      SECP_CACHE_VERSION: "2022-12-30"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7", "9.2.4"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Install cbor-diag and cddl
      run: |
        gem install cddl -v 0.8.15
        gem install cbor-diag

    - name: Install libsodium
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - name: Install Haskell
      uses: input-output-hk/setup-haskell@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: latest

    - name: Install secp256k1
      uses: input-output-hk/setup-secp256k1@v1
      with:
        git-ref: ${{ env.SECP256K1_REF }}
        cache-version: ${{ env.SECP_CACHE_VERSION }}

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Cabal update
      run: cabal update

    - name: Cabal Configure
      run: cabal configure --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - uses: actions/cache@v3
      if: matrix.os != 'macos-latest'
      name: Cache cabal store
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-newstyle
        # cache is invalidated upon a change to cabal.project (and/or cabal.project.local), a bump to
        # CABAL_CACHE_VERSION or after a week of inactivity
        key: cache-${{ runner.os }}-${{ matrix.ghc }}-${{ env.CABAL_CACHE_VERSION }}-${{ hashFiles('cabal.project*') }}
        # Restoring attempts are from current branch then master
        restore-keys: |
          cache-${{ runner.os }}-${{ matrix.ghc }}-${{ env.CABAL_CACHE_VERSION }}-${{ hashFiles('cabal.project*') }}

    - name: Install dependencies
      run: cabal build all --only-dependencies

    - name: Build
      run: cabal build all

    - name: Download Mainnet Mirror
      run: |
        REF=a31ac75
        curl -L https://github.com/input-output-hk/cardano-mainnet-mirror/tarball/$REF -o mainnet-mirror.tgz
        tar -xzf mainnet-mirror.tgz
        mv input-output-hk-cardano-mainnet-mirror-$REF/epochs .

    - name: Run tests
      run: |
        export CARDANO_MAINNET_MIRROR="$(pwd)/epochs"
        cabal test all

  fourmolu:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Install fourmolu
      run: |
        mkdir -p "$HOME/.local/bin"
        curl -sL https://github.com/fourmolu/fourmolu/releases/download/v0.10.1.0/fourmolu-0.10.1.0-linux-x86_64 -o "$HOME/.local/bin/fourmolu"
        chmod a+x "$HOME/.local/bin/fourmolu"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Run fourmolu
      run: ./scripts/fourmolize.sh

  cabal-format:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Format all cabal files
      run: ./scripts/cabal-format.sh
