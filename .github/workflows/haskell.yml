name: Haskell CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ "master", "release/*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

      SECP_CACHE_VERSION: 2022-12-24

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7", "9.2.4"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Install cbor-diag and cddl
      run: |
        gem install cddl -v 0.8.15
        gem install cbor-diag

    - name: Install libsodium
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - uses: actions/cache@v3
      name: "Cache secp256k1"
      with:
        path: secp256k1
        key: cache-secp256k1-${{ runner.os }}-${{ env.SECP_CACHE_VERSION }}
        restore-keys: cache-secp256k1-${{ runner.os }}-${{ env.SECP_CACHE_VERSION }}

    - name: "Install secp256k1"
      if: runner.os != 'Windows'
      shell: bash
      env:
        CI_SECP_FLAGS: "--prefix=/usr/local"
        CI_SECP_INSTALL_CMD: sudo
      run: bash .github/workflows/build-secp256k1.bash

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 3.8.1.0

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Cabal update
      run: cabal update

    - name: Cabal Configure
      run: cabal configure --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - uses: actions/cache@v2
      if: matrix.os != 'macos-latest'
      name: Cache cabal store
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist
        key: cache-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Install dependencies
      run: cabal build all --only-dependencies

    - name: Build
      run: cabal build all

    - name: Git clone
      run: git clone https://github.com/input-output-hk/cardano-mainnet-mirror

    - name: Run tests
      run: |
        export CARDANO_MAINNET_MIRROR="$(pwd)/cardano-mainnet-mirror/epochs"
        cabal test all

  ormolu:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v1

    - name: Install ormolu
      run: |
        mkdir -p "$HOME/.local/bin"
        curl -sL https://github.com/tweag/ormolu/releases/download/0.5.0.1/ormolu-Linux.zip -o /tmp/ormolu.zip
        unzip /tmp/ormolu.zip -d "$HOME/.local/bin/"
        chmod a+x "$HOME/.local/bin/ormolu"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Run ormolu
      run: ./scripts/ormolise.sh
