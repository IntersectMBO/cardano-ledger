-- | This file is generated by plutus-preprocessor/src/Main.hs
module Test.Cardano.Ledger.Alonzo.PlutusScripts where

import Cardano.Ledger.Alonzo.Scripts (CostModel (..), Script (..))
import Data.ByteString.Short (pack)
import Plutus.V1.Ledger.Api (defaultCostModelParams)

defaultCostModel :: Maybe CostModel
defaultCostModel = CostModel <$> defaultCostModelParams

{- Preproceesed Plutus Script
guessTheNumber'2_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
guessTheNumber'2_0 d1_1 d2_2 = if d1_1 PlutusTx.Eq.== d2_2
                                then GHC.Tuple.()
                                else PlutusTx.Builtins.error GHC.Tuple.()
-}

guessTheNumber2 :: Script era
guessTheNumber2 =
  (PlutusScript . pack . concat)
    [ [88, 73, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 50, 50, 50],
      [0, 18, 37, 51, 83, 0, 147, 51, 80, 7, 0, 128, 2, 0, 17],
      [0, 97, 53, 0, 48, 6, 18, 53, 0, 35, 83, 0, 48, 1, 73],
      [132, 152, 72, 0, 72, 0, 68, 128, 4, 136, 204, 213, 202, 153, 186],
      [224, 2, 0, 16, 5, 0, 65, 34, 0, 33, 34, 0, 18, 0, 17]
    ]

{- Preproceesed Plutus Script
guessTheNumber'3_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
guessTheNumber'3_0 d1_1 d2_2 _d3_3 = if d1_1 PlutusTx.Eq.== d2_2
                                      then GHC.Tuple.()
                                      else PlutusTx.Builtins.error GHC.Tuple.()
-}

guessTheNumber3 :: Script era
guessTheNumber3 =
  (PlutusScript . pack . concat)
    [ [88, 74, 1, 0, 0, 51, 50, 34, 50, 50, 51, 34, 50, 50, 50],
      [0, 18, 34, 83, 53, 48, 10, 51, 53, 0, 128, 9, 0, 48, 2],
      [16, 7, 19, 80, 4, 0, 113, 35, 80, 2, 53, 48, 3, 0, 20],
      [152, 73, 132, 128, 4, 128, 4, 72, 0, 72, 140, 205, 92, 169, 155],
      [174, 0, 32, 1, 0, 80, 4, 18, 32, 2, 18, 32, 1, 32, 1],
      [1]
    ]

{- Preproceesed Plutus Script
evendata'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData -> ()
evendata'_0 d1_1 _d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1
                                in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 0
                                    then GHC.Tuple.()
                                    else PlutusTx.Builtins.error GHC.Tuple.()
-}

evendata3 :: Script era
evendata3 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 34, 83, 53, 48, 12, 51, 53, 0, 160, 11, 51],
      [0, 83, 0, 64, 3, 72, 1, 18, 0, 1, 0, 129, 53, 0, 96],
      [8, 35, 117, 128, 2, 68, 102, 228, 128, 8, 0, 68, 141, 64, 16],
      [212, 192, 8, 0, 82, 97, 32, 1, 32, 1, 18, 97, 32, 1, 34],
      [51, 53, 114, 166, 110, 36, 0, 128, 4, 1, 64, 16, 72, 128, 8],
      [72, 128, 4, 128, 5]
    ]

{- Preproceesed Plutus Script
odddata'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
              PlutusTx.Builtins.Internal.BuiltinData ->
              PlutusTx.Builtins.Internal.BuiltinData -> ()
odddata'_0 d1_1 _d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 1
                                   then GHC.Tuple.()
                                   else PlutusTx.Builtins.error GHC.Tuple.()
-}

odddata3 :: Script era
odddata3 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 34, 83, 53, 48, 12, 51, 53, 0, 160, 11, 51],
      [0, 83, 0, 64, 3, 72, 1, 18, 0, 33, 0, 129, 53, 0, 96],
      [8, 35, 117, 128, 2, 68, 102, 228, 128, 8, 0, 68, 141, 64, 16],
      [212, 192, 8, 0, 82, 97, 32, 1, 32, 1, 18, 97, 32, 1, 34],
      [51, 53, 114, 166, 110, 36, 0, 128, 4, 1, 64, 16, 72, 128, 8],
      [72, 128, 4, 128, 5]
    ]

{- Preproceesed Plutus Script
evenRedeemer'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
evenRedeemer'_0 _d1_1 d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d2_2
                                    in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 0
                                        then GHC.Tuple.()
                                        else PlutusTx.Builtins.error GHC.Tuple.()
-}

evenRedeemer3 :: Script era
evenRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 34, 83, 53, 48, 12, 51, 53, 0, 160, 11, 51],
      [0, 83, 0, 64, 2, 72, 1, 18, 0, 1, 0, 129, 53, 0, 96],
      [8, 35, 117, 128, 2, 68, 102, 228, 128, 8, 0, 68, 141, 64, 16],
      [212, 192, 8, 0, 82, 97, 32, 1, 32, 1, 18, 97, 32, 1, 34],
      [51, 53, 114, 166, 110, 36, 0, 128, 4, 1, 64, 16, 72, 128, 8],
      [72, 128, 4, 128, 5]
    ]

{- Preproceesed Plutus Script
oddRedeemer'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                  PlutusTx.Builtins.Internal.BuiltinData ->
                  PlutusTx.Builtins.Internal.BuiltinData -> ()
oddRedeemer'_0 _d1_1 d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d2_2
                                   in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 1
                                       then GHC.Tuple.()
                                       else PlutusTx.Builtins.error GHC.Tuple.()
-}

oddRedeemer3 :: Script era
oddRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 34, 83, 53, 48, 12, 51, 53, 0, 160, 11, 51],
      [0, 83, 0, 64, 2, 72, 1, 18, 0, 33, 0, 129, 53, 0, 96],
      [8, 35, 117, 128, 2, 68, 102, 228, 128, 8, 0, 68, 141, 64, 16],
      [212, 192, 8, 0, 82, 97, 32, 1, 32, 1, 18, 97, 32, 1, 34],
      [51, 53, 114, 166, 110, 36, 0, 128, 4, 1, 64, 16, 72, 128, 8],
      [72, 128, 4, 128, 5]
    ]

{- Preproceesed Plutus Script
sumsTo10'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData -> ()
sumsTo10'_0 d1_1 d2_2 _d3_3 = let {n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1;
                                   m_5 = PlutusTx.Builtins.unsafeDataAsI d2_2}
                               in if (m_5 PlutusTx.Numeric.+ n_4) PlutusTx.Eq.== 10
                                   then GHC.Tuple.()
                                   else PlutusTx.Builtins.error GHC.Tuple.()
-}

sumsTo103 :: Script era
sumsTo103 =
  (PlutusScript . pack . concat)
    [ [88, 101, 1, 0, 0, 50, 51, 50, 34, 50, 50, 50, 50, 51, 34],
      [50, 50, 50, 0, 18, 34, 83, 53, 48, 12, 51, 53, 0, 144, 11],
      [51, 53, 0, 160, 15, 48, 4, 0, 35, 0, 64, 3, 72, 5, 4],
      [1, 196, 212, 1, 64, 28, 141, 214, 0, 8, 145, 168, 2, 26, 152],
      [1, 0, 10, 76, 36, 0, 36, 0, 34, 76, 36, 0, 34, 64, 2],
      [68, 102, 106, 229, 76, 220, 72, 1, 0, 8, 2, 128, 32, 145, 0],
      [16, 145, 0, 9, 0, 9, 17, 155, 128, 0, 32, 1, 1]
    ]

{- Preproceesed Plutus Script
oddRedeemer2'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
oddRedeemer2'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                              in if PlutusTx.Prelude.modulo n_3 2 PlutusTx.Eq.== 1
                                  then GHC.Tuple.()
                                  else PlutusTx.Builtins.error GHC.Tuple.()
-}

oddRedeemer2 :: Script era
oddRedeemer2 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 37, 51, 83, 0, 179, 51, 80, 9, 0, 163, 48],
      [4, 48, 3, 0, 36, 128, 17, 32, 2, 16, 7, 19, 80, 5, 0],
      [114, 55, 88, 0, 36, 70, 110, 72, 0, 128, 4, 72, 212, 1, 13],
      [76, 0, 128, 5, 38, 18, 0, 18, 0, 17, 38, 18, 0, 18, 35],
      [51, 87, 42, 102, 226, 64, 8, 0, 64, 20, 1, 4, 136, 0, 132],
      [136, 0, 72, 0, 65]
    ]

{- Preproceesed Plutus Script
evenRedeemer2'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                    PlutusTx.Builtins.Internal.BuiltinData -> ()
evenRedeemer2'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if PlutusTx.Prelude.modulo n_3 2 PlutusTx.Eq.== 0
                                   then GHC.Tuple.()
                                   else PlutusTx.Builtins.error GHC.Tuple.()
-}

evenRedeemer2 :: Script era
evenRedeemer2 =
  (PlutusScript . pack . concat)
    [ [88, 93, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 50, 0, 18, 37, 51, 83, 0, 179, 51, 80, 9, 0, 163, 48],
      [4, 48, 3, 0, 36, 128, 17, 32, 0, 16, 7, 19, 80, 5, 0],
      [114, 55, 88, 0, 36, 70, 110, 72, 0, 128, 4, 72, 212, 1, 13],
      [76, 0, 128, 5, 38, 18, 0, 18, 0, 17, 38, 18, 0, 18, 35],
      [51, 87, 42, 102, 226, 64, 8, 0, 64, 20, 1, 4, 136, 0, 132],
      [136, 0, 72, 0, 65]
    ]

{- Preproceesed Plutus Script
redeemerIs102'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                    PlutusTx.Builtins.Internal.BuiltinData -> ()
redeemerIs102'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if n_3 PlutusTx.Eq.== 10
                                   then GHC.Tuple.()
                                   else PlutusTx.Builtins.error GHC.Tuple.()
-}

redeemerIs102 :: Script era
redeemerIs102 =
  (PlutusScript . pack . concat)
    [ [88, 81, 1, 0, 0, 51, 50, 34, 50, 50, 50, 51, 34, 50, 50],
      [50, 0, 18, 37, 51, 83, 0, 163, 51, 80, 8, 0, 147, 0, 48],
      [2, 72, 5, 4, 1, 132, 212, 1, 0, 24, 141, 214, 0, 8, 145],
      [168, 2, 26, 152, 1, 0, 10, 76, 36, 0, 36, 0, 34, 76, 36],
      [0, 36, 70, 102, 174, 84, 205, 196, 128, 16, 0, 128, 40, 2, 9],
      [16, 1, 9, 16, 0, 144, 0, 129]
    ]
