[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QC\">QC</a> = <a href=\"#v:QC\">QC</a>","name":"QC QC","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#t:QC"},{"display_html":"<a href=\"#v:mkDummyHash\">mkDummyHash</a> &#8759; &#8704; h a b. (<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:HashAlgorithm\" title=\"Cardano.Crypto.Hash.Class\">HashAlgorithm</a> h, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a) &#8658; a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:Hash\" title=\"Cardano.Crypto.Hash.Class\">Hash</a> h b","name":"mkDummyHash","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#v:mkDummyHash"},{"display_html":"<a href=\"#v:mkHashStdGen\">mkHashStdGen</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> x &#8658; x &#8594; <a href=\"../random/System-Random.html#t:StdGen\" title=\"System.Random\">StdGen</a>","name":"mkHashStdGen","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#v:mkHashStdGen"},{"display_html":"<a href=\"#v:genVersion\">genVersion</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a>","name":"genVersion","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genVersion"},{"display_html":"<a href=\"#v:genByteArray\">genByteArray</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../base/Data-Array-Byte.html#t:ByteArray\" title=\"Data.Array.Byte\">ByteArray</a>","name":"genByteArray","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genByteArray"},{"display_html":"<a href=\"#v:genByteString\">genByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>","name":"genByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genByteString"},{"display_html":"<a href=\"#v:genLazyByteString\">genLazyByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"genLazyByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genLazyByteString"},{"display_html":"<a href=\"#v:genShortByteString\">genShortByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../bytestring/Data-ByteString-Short.html#t:ShortByteString\" title=\"Data.ByteString.Short\">ShortByteString</a>","name":"genShortByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genShortByteString"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToExpr\">ToExpr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toExpr\">toExpr</a> &#8759; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a></li><li><a href=\"#v:listToExpr\">listToExpr</a> &#8759; [a] &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a></li></ul>","name":"ToExpr toExpr listToExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBORBytes\">CBORBytes</a> = <a href=\"#v:CBORBytes\">CBORBytes</a> {<ul class=\"subs\"><li><a href=\"#v:unCBORBytes\">unCBORBytes</a> &#8759; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"CBORBytes CBORBytes unCBORBytes","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:CBORBytes"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:HexBytes\">HexBytes</a> = <a href=\"#v:HexBytes\">HexBytes</a> {<ul class=\"subs\"><li><a href=\"#v:unHexBytes\">unHexBytes</a> &#8759; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"HexBytes HexBytes unHexBytes","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:HexBytes"},{"display_html":"<a href=\"#v:showExpr\">showExpr</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:showExpr"},{"display_html":"<a href=\"#v:ansiExpr\">ansiExpr</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>","name":"ansiExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ansiExpr"},{"display_html":"<a href=\"#v:ansiExprString\">ansiExprString</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"ansiExprString","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ansiExprString"},{"display_html":"<a href=\"#v:diffExpr\">diffExpr</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>","name":"diffExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:diffExpr"},{"display_html":"<a href=\"#v:diffExprString\">diffExprString</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"diffExprString","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:diffExprString"},{"display_html":"<a href=\"#v:diffExprCompact\">diffExprCompact</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>","name":"diffExprCompact","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:diffExprCompact"},{"display_html":"<a href=\"#v:diffExprCompactString\">diffExprCompactString</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"diffExprCompactString","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:diffExprCompactString"},{"display_html":"<a href=\"#v:ansiDocToString\">ansiDocToString</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a> &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"ansiDocToString","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ansiDocToString"},{"display_html":"<a href=\"#v:hexByteStringExpr\">hexByteStringExpr</a> &#8759; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> &#8594; [<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>]","name":"hexByteStringExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:hexByteStringExpr"},{"display_html":"<a href=\"#v:showHexBytesGrouped\">showHexBytesGrouped</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> &#8594; [<a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>]","name":"showHexBytesGrouped","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:showHexBytesGrouped"},{"display_html":"<a href=\"#v:assertColorFailure\">assertColorFailure</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"assertColorFailure","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:assertColorFailure"},{"display_html":"<a href=\"#v:expectExprEqual\">expectExprEqual</a> &#8759; (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a) &#8658; a &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectExprEqual","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:expectExprEqual"},{"display_html":"<a href=\"#v:expectExprEqualWithMessage\">expectExprEqualWithMessage</a> &#8759; (<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> &#8594; a &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectExprEqualWithMessage","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:expectExprEqualWithMessage"},{"display_html":"<a href=\"#v:assertExprEqualWithMessage\">assertExprEqualWithMessage</a> &#8759; (<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> &#8594; a &#8594; a &#8594; <a href=\"../tasty-hunit/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertExprEqualWithMessage","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:assertExprEqualWithMessage"},{"display_html":"<a href=\"#v:callStackToLocation\">callStackToLocation</a> &#8759; <a href=\"../base/GHC-Stack.html#t:CallStack\" title=\"GHC.Stack\">CallStack</a> &#8594; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../hspec-core/Test-Hspec-Core-Format.html#t:Location\" title=\"Test.Hspec.Core.Format\">Location</a>","name":"callStackToLocation","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:callStackToLocation"},{"display_html":"<a href=\"#v:srcLocToLocation\">srcLocToLocation</a> &#8759; <a href=\"../base/GHC-Stack.html#t:SrcLoc\" title=\"GHC.Stack\">SrcLoc</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Format.html#t:Location\" title=\"Test.Hspec.Core.Format\">Location</a>","name":"srcLocToLocation","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:srcLocToLocation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Expr\">Expr</a><ul class=\"subs\"><li>= <a href=\"#v:App\">App</a> <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:ConstructorName\" title=\"Data.TreeDiff.Expr\">ConstructorName</a> [<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>]</li><li>| <a href=\"#v:Rec\">Rec</a> <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:ConstructorName\" title=\"Data.TreeDiff.Expr\">ConstructorName</a> (<a href=\"../tree-diff/Data-TreeDiff-OMap.html#t:OMap\" title=\"Data.TreeDiff.OMap\">OMap</a> <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:FieldName\" title=\"Data.TreeDiff.Expr\">FieldName</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>)</li><li>| <a href=\"#v:Lst\">Lst</a> [<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>]</li></ul>","name":"Expr App Rec Lst","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr"},{"display_html":"<a href=\"#v:defaultExprViaShow\">defaultExprViaShow</a> &#8759; <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a &#8658; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>","name":"defaultExprViaShow","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:defaultExprViaShow"},{"display_html":"<a href=\"#v:trimExprViaShow\">trimExprViaShow</a> &#8759; <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a &#8658; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Expr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Expr</a>","name":"trimExprViaShow","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:trimExprViaShow"},{"display_html":"<a href=\"#v:tableDoc\">tableDoc</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>) &#8594; [(<a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>, <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>)] &#8594; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Doc</a> <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">AnsiStyle</a>","name":"tableDoc","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:tableDoc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Pretty\">Pretty</a> doc = <a href=\"#v:Pretty\">Pretty</a> {<ul class=\"subs\"><li><a href=\"#v:ppCon\">ppCon</a> &#8759; <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:ConstructorName\" title=\"Data.TreeDiff.Expr\">ConstructorName</a> &#8594; doc</li><li><a href=\"#v:ppApp\">ppApp</a> &#8759; doc &#8594; [doc] &#8594; doc</li><li><a href=\"#v:ppRec\">ppRec</a> &#8759; doc &#8594; [(<a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:FieldName\" title=\"Data.TreeDiff.Expr\">FieldName</a>, doc)] &#8594; doc</li><li><a href=\"#v:ppLst\">ppLst</a> &#8759; [doc] &#8594; doc</li><li><a href=\"#v:ppCpy\">ppCpy</a> &#8759; doc &#8594; doc</li><li><a href=\"#v:ppIns\">ppIns</a> &#8759; doc &#8594; doc</li><li><a href=\"#v:ppDel\">ppDel</a> &#8759; doc &#8594; doc</li><li><a href=\"#v:ppEdits\">ppEdits</a> &#8759; [doc] &#8594; doc</li><li><a href=\"#v:ppEllip\">ppEllip</a> &#8759; doc</li><li><a href=\"#v:ppParens\">ppParens</a> &#8759; doc &#8594; doc</li></ul>}","name":"Pretty Pretty ppCon ppApp ppRec ppLst ppCpy ppIns ppDel ppEdits ppEllip ppParens","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Pretty"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Doc\">Doc</a> ann","name":"Doc","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Doc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AnsiStyle\">AnsiStyle</a>","name":"AnsiStyle","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:AnsiStyle"},{"display_html":"<a href=\"#v:ansiWlPretty\">ansiWlPretty</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Pretty\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Pretty</a> <a href=\"../ansi-wl-pprint/Text-PrettyPrint-ANSI-Leijen.html#t:Doc\" title=\"Text.PrettyPrint.ANSI.Leijen\">Doc</a>","name":"ansiWlPretty","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ansiWlPretty"},{"display_html":"<a href=\"#v:ppEditExpr\">ppEditExpr</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:Pretty\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">Pretty</a> doc &#8594; <a href=\"../tree-diff/Data-TreeDiff-List.html#t:Edit\" title=\"Data.TreeDiff.List\">Edit</a> <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:EditExpr\" title=\"Data.TreeDiff.Expr\">EditExpr</a> &#8594; doc","name":"ppEditExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ppEditExpr"},{"display_html":"<a href=\"#v:ediff\">ediff</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-TreeDiff.html#t:ToExpr\" title=\"Test.Cardano.Ledger.Binary.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"../tree-diff/Data-TreeDiff-List.html#t:Edit\" title=\"Data.TreeDiff.List\">Edit</a> <a href=\"../tree-diff/Data-TreeDiff-Expr.html#t:EditExpr\" title=\"Data.TreeDiff.Expr\">EditExpr</a>","name":"ediff","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:ediff"},{"display_html":"<a href=\"#v:roundTripSpec\">roundTripSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"roundTripSpec","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripSpec"},{"display_html":"<a href=\"#v:roundTripFailureExpectation\">roundTripFailureExpectation</a> &#8759; &#8704; a. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary.html#t:FromCBOR\" title=\"Cardano.Binary\">FromCBOR</a> a) &#8658; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripFailureExpectation"},{"display_html":"<a href=\"#v:roundTripExpectation\">roundTripExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripExpectation"},{"display_html":"<a href=\"#v:roundTripCborExpectation\">roundTripCborExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:FromCBOR\" title=\"Cardano.Binary\">FromCBOR</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripCborExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripCborExpectation"},{"display_html":"<a href=\"#v:embedTripSpec\">embedTripSpec</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> a, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>) &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"embedTripSpec","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripSpec"},{"display_html":"<a href=\"#v:embedTripExpectation\">embedTripExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>) &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"embedTripExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripExpectation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RoundTripFailure\">RoundTripFailure</a> = <a href=\"#v:RoundTripFailure\">RoundTripFailure</a> {<ul class=\"subs\"><li><a href=\"#v:rtfEncoding\">rtfEncoding</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:rtfEncodedBytes\">rtfEncodedBytes</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li><li><a href=\"#v:rtfReEncodedBytes\">rtfReEncodedBytes</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li><li><a href=\"#v:rtfFlatTermError\">rtfFlatTermError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:rtfDecoderError\">rtfDecoderError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary.html#t:DecoderError\" title=\"Cardano.Binary\">DecoderError</a></li></ul>}","name":"RoundTripFailure RoundTripFailure rtfEncoding rtfEncodedBytes rtfReEncodedBytes rtfFlatTermError rtfDecoderError","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure"},{"display_html":"<a href=\"#v:showMaybeDecoderError\">showMaybeDecoderError</a> &#8759; <a href=\"../formatting/Formatting-Buildable.html#t:Buildable\" title=\"Formatting.Buildable\">Buildable</a> b &#8658; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> &#8594; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showMaybeDecoderError","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:showMaybeDecoderError"},{"display_html":"<a href=\"#v:showFailedTermsWithReSerialization\">showFailedTermsWithReSerialization</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; [<a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>]","name":"showFailedTermsWithReSerialization","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:showFailedTermsWithReSerialization"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Trip\">Trip</a> a b = <a href=\"#v:Trip\">Trip</a> {<ul class=\"subs\"><li><a href=\"#v:tripEncoder\">tripEncoder</a> &#8759; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:tripDecoder\">tripDecoder</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Plain\">Decoder</a> s b</li></ul>}","name":"Trip Trip tripEncoder tripDecoder","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip"},{"display_html":"<a href=\"#v:mkTrip\">mkTrip</a> &#8759; &#8704; a b. (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Plain\">Decoder</a> s b) &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b","name":"mkTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:mkTrip"},{"display_html":"<a href=\"#v:cborTrip\">cborTrip</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary.html#t:FromCBOR\" title=\"Cardano.Binary\">FromCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b","name":"cborTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:cborTrip"},{"display_html":"<a href=\"#v:roundTrip\">roundTrip</a> &#8759; &#8704; t. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> t","name":"roundTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTrip"},{"display_html":"<a href=\"#v:embedTrip\">embedTrip</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> b","name":"embedTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTrip"},{"display_html":"<a href=\"#v:embedTripLabel\">embedTripLabel</a> &#8759; &#8704; a b. <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> b","name":"embedTripLabel","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripLabel"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Enc\">Enc</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:E\">E</a> &#8759; <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a &#8658; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li><li><a href=\"#v:Ev\">Ev</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li><li><a href=\"#v:Em\">Em</a> &#8759; [<a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a>] &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li></ul>","name":"Enc E Ev Em","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DiffView\">DiffView</a><ul class=\"subs\"><li>= <a href=\"#v:DiffCBOR\">DiffCBOR</a></li><li>| <a href=\"#v:DiffHex\">DiffHex</a></li><li>| <a href=\"#v:DiffRaw\">DiffRaw</a></li><li>| <a href=\"#v:DiffAuto\">DiffAuto</a></li></ul>","name":"DiffView DiffCBOR DiffHex DiffRaw DiffAuto","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView"},{"display_html":"<a href=\"#v:expectGoldenEncoding\">expectGoldenEncoding</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; (b &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; b &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectGoldenEncoding","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncoding"},{"display_html":"<a href=\"#v:expectGoldenToCBOR\">expectGoldenToCBOR</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; b &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectGoldenToCBOR","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenToCBOR"},{"display_html":"<a href=\"#v:expectGoldenEncBytes\">expectGoldenEncBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectGoldenEncBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncBytes"},{"display_html":"<a href=\"#v:expectGoldenEncLazyBytes\">expectGoldenEncLazyBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectGoldenEncLazyBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncLazyBytes"},{"display_html":"<a href=\"#v:expectGoldenEncHexBytes\">expectGoldenEncHexBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; <a href=\"../bytestring/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"expectGoldenEncHexBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncHexBytes"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Twiddler\">Twiddler</a> a = <a href=\"#v:Twiddler\">Twiddler</a> {<ul class=\"subs\"><li><a href=\"#v:twiddlerVersion\">twiddlerVersion</a> &#8759; !<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:twiddlerType\">twiddlerType</a> &#8759; !a</li><li><a href=\"#v:twiddlerTerm\">twiddlerTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a></li></ul>}","name":"Twiddler Twiddler twiddlerVersion twiddlerType twiddlerTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddler"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Twiddle\">Twiddle</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:twiddle\">twiddle</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a></li></ul>","name":"Twiddle twiddle","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle"},{"display_html":"<a href=\"#v:encodingToTerm\">encodingToTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding\">Encoding</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>","name":"encodingToTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:encodingToTerm"},{"display_html":"<a href=\"#v:toTwiddler\">toTwiddler</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddler\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddler</a> a)","name":"toTwiddler","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:toTwiddler"},{"display_html":"<a href=\"#v:toTerm\">toTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>","name":"toTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:toTerm"},{"display_html":"<a href=\"#v:twiddleInvariantProp\">twiddleInvariantProp</a> &#8759; &#8704; a. <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"twiddleInvariantProp","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:twiddleInvariantProp"},{"display_html":"<a href=\"#v:emptyOrNothing\">emptyOrNothing</a> &#8759; &#8704; t b. (<a href=\"../base/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> (t <a href=\"../base/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a>), <a href=\"../base/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> (t <a href=\"../base/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a>), <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> (t b)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t b &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>)","name":"emptyOrNothing","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:emptyOrNothing"},{"display_html":"<a href=\"#v:twiddleStrictMaybe\">twiddleStrictMaybe</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-strict-containers/Data-Maybe-Strict.html#t:StrictMaybe\" title=\"Data.Maybe.Strict\">StrictMaybe</a> a &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>)","name":"twiddleStrictMaybe","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:twiddleStrictMaybe"},{"display_html":"<a href=\"#v:roundTripSpec\">roundTripSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"roundTripSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripSpec"},{"display_html":"<a href=\"#v:roundTripCborSpec\">roundTripCborSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t) &#8658; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"roundTripCborSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborSpec"},{"display_html":"<a href=\"#v:roundTripAnnCborSpec\">roundTripAnnCborSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t)) &#8658; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"roundTripAnnCborSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnCborSpec"},{"display_html":"<a href=\"#v:roundTripRangeSpec\">roundTripRangeSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"roundTripRangeSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeSpec"},{"display_html":"<a href=\"#v:roundTripExpectation\">roundTripExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripExpectation"},{"display_html":"<a href=\"#v:roundTripRangeExpectation\">roundTripRangeExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeExpectation"},{"display_html":"<a href=\"#v:roundTripFailureExpectation\">roundTripFailureExpectation</a> &#8759; (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripFailureExpectation"},{"display_html":"<a href=\"#v:roundTripRangeFailureExpectation\">roundTripRangeFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripCborExpectation\">roundTripCborExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripCborExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborExpectation"},{"display_html":"<a href=\"#v:roundTripCborRangeExpectation\">roundTripCborRangeExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripCborRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborRangeExpectation"},{"display_html":"<a href=\"#v:roundTripCborFailureExpectation\">roundTripCborFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripCborFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborFailureExpectation"},{"display_html":"<a href=\"#v:roundTripCborRangeFailureExpectation\">roundTripCborRangeFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripCborRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripAnnExpectation\">roundTripAnnExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripAnnExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnExpectation"},{"display_html":"<a href=\"#v:roundTripAnnRangeExpectation\">roundTripAnnRangeExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripAnnRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnRangeExpectation"},{"display_html":"<a href=\"#v:roundTripAnnFailureExpectation\">roundTripAnnFailureExpectation</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripAnnFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnFailureExpectation"},{"display_html":"<a href=\"#v:roundTripAnnRangeFailureExpectation\">roundTripAnnRangeFailureExpectation</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"roundTripAnnRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnRangeFailureExpectation"},{"display_html":"<a href=\"#v:embedTripSpec\">embedTripSpec</a> &#8759; &#8704; a b. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> a, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>) &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"embedTripSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripSpec"},{"display_html":"<a href=\"#v:embedTripExpectation\">embedTripExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>) &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"embedTripExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripExpectation"},{"display_html":"<a href=\"#v:embedTripAnnExpectation\">embedTripAnnExpectation</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> b), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; (b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>) &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"embedTripAnnExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripAnnExpectation"},{"display_html":"<a href=\"#v:embedTripFailureExpectation\">embedTripFailureExpectation</a> &#8759; (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"embedTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripFailureExpectation"},{"display_html":"<a href=\"#v:embedTripRangeFailureExpectation\">embedTripRangeFailureExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"embedTripRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripTwiddledProperty\">roundTripTwiddledProperty</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"roundTripTwiddledProperty","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripTwiddledProperty"},{"display_html":"<a href=\"#v:roundTripAnnTwiddledProperty\">roundTripAnnTwiddledProperty</a> &#8759; &#8704; t q. (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../QuickCheck/Test-QuickCheck.html#t:Testable\" title=\"Test.QuickCheck\">Testable</a> q) &#8658; (t &#8594; t &#8594; q) &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"roundTripAnnTwiddledProperty","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnTwiddledProperty"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RoundTripFailure\">RoundTripFailure</a> = <a href=\"#v:RoundTripFailure\">RoundTripFailure</a> {<ul class=\"subs\"><li><a href=\"#v:rtfEncoderVersion\">rtfEncoderVersion</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:rtfDecoderVersion\">rtfDecoderVersion</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:rtfEncoding\">rtfEncoding</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:rtfEncodedBytes\">rtfEncodedBytes</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li><li><a href=\"#v:rtfReEncodedBytes\">rtfReEncodedBytes</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li><li><a href=\"#v:rtfConformanceError\">rtfConformanceError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:rtfDropperError\">rtfDropperError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary.html#t:DecoderError\" title=\"Cardano.Binary\">DecoderError</a></li><li><a href=\"#v:rtfDecoderError\">rtfDecoderError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary.html#t:DecoderError\" title=\"Cardano.Binary\">DecoderError</a></li></ul>}","name":"RoundTripFailure RoundTripFailure rtfEncoding rtfEncodedBytes rtfReEncodedBytes rtfDecoderError rtfEncoderVersion rtfDecoderVersion rtfConformanceError rtfDropperError","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Trip\">Trip</a> a b = <a href=\"#v:Trip\">Trip</a> {<ul class=\"subs\"><li><a href=\"#v:tripEncoder\">tripEncoder</a> &#8759; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding\">Encoding</a></li><li><a href=\"#v:tripDecoder\">tripDecoder</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s b</li><li><a href=\"#v:tripDropper\">tripDropper</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s ()</li></ul>}","name":"Trip Trip tripEncoder tripDecoder tripDropper","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip"},{"display_html":"<a href=\"#v:mkTrip\">mkTrip</a> &#8759; &#8704; a b. (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s b) &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b","name":"mkTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:mkTrip"},{"display_html":"<a href=\"#v:cborTrip\">cborTrip</a> &#8759; &#8704; a b. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b","name":"cborTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:cborTrip"},{"display_html":"<a href=\"#v:roundTrip\">roundTrip</a> &#8759; &#8704; t. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t","name":"roundTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTrip"},{"display_html":"<a href=\"#v:roundTripTwiddled\">roundTripTwiddled</a> &#8759; &#8704; t. (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t)","name":"roundTripTwiddled","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripTwiddled"},{"display_html":"<a href=\"#v:roundTripAnn\">roundTripAnn</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t","name":"roundTripAnn","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnn"},{"display_html":"<a href=\"#v:roundTripAnnTwiddled\">roundTripAnnTwiddled</a> &#8759; (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t)","name":"roundTripAnnTwiddled","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnTwiddled"},{"display_html":"<a href=\"#v:embedTrip\">embedTrip</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b, <a href=\"../base/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> b) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTrip"},{"display_html":"<a href=\"#v:embedTripAnn\">embedTripAnn</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> b)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTripAnn","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripAnn"},{"display_html":"<a href=\"#v:embedTripLabel\">embedTripLabel</a> &#8759; &#8704; a b. <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTripLabel","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripLabel"},{"display_html":"<a href=\"#v:embedTripLabelExtra\">embedTripLabelExtra</a> &#8759; &#8704; a b. <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> b &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> (b, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>, <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"embedTripLabelExtra","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripLabelExtra"},{"display_html":"<a href=\"#v:decodeAnnExtra\">decodeAnnExtra</a> &#8759; &#8704; t. <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t)) &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a> &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> (t, <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"decodeAnnExtra","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:decodeAnnExtra"},{"display_html":"<a href=\"#v:decoderEquivalenceSpec\">decoderEquivalenceSpec</a> &#8759; &#8704; t. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> t, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"decoderEquivalenceSpec","module":"Test.Cardano.Ledger.Binary","link":"Test-Cardano-Ledger-Binary.html#v:decoderEquivalenceSpec"},{"display_html":"<a href=\"#v:decoderEquivalenceExpectation\">decoderEquivalenceExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"decoderEquivalenceExpectation","module":"Test.Cardano.Ledger.Binary","link":"Test-Cardano-Ledger-Binary.html#v:decoderEquivalenceExpectation"},{"display_html":"<a href=\"#v:decoderEquivalenceProp\">decoderEquivalenceProp</a> &#8759; &#8704; t. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary.html#t:ToCBOR\" title=\"Cardano.Binary\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> t), <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"decoderEquivalenceProp","module":"Test.Cardano.Ledger.Binary","link":"Test-Cardano-Ledger-Binary.html#v:decoderEquivalenceProp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CuddleData\">CuddleData</a>","name":"CuddleData","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData"},{"display_html":"<a href=\"#v:huddleDecoderEquivalenceSpec\">huddleDecoderEquivalenceSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> a)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData\" title=\"Test.Cardano.Ledger.Binary.Cuddle\">CuddleData</a>","name":"huddleDecoderEquivalenceSpec","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:huddleDecoderEquivalenceSpec"},{"display_html":"<a href=\"#v:specWithHuddle\">specWithHuddle</a> &#8759; <a href=\"../cuddle/Codec-CBOR-Cuddle-Huddle.html#t:Huddle\" title=\"Codec.CBOR.Cuddle.Huddle\">Huddle</a> &#8594; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData\" title=\"Test.Cardano.Ledger.Binary.Cuddle\">CuddleData</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"specWithHuddle","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:specWithHuddle"},{"display_html":"<a href=\"#v:huddleRoundTripCborSpec\">huddleRoundTripCborSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData\" title=\"Test.Cardano.Ledger.Binary.Cuddle\">CuddleData</a>","name":"huddleRoundTripCborSpec","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:huddleRoundTripCborSpec"},{"display_html":"<a href=\"#v:huddleRoundTripAnnCborSpec\">huddleRoundTripAnnCborSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> a)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData\" title=\"Test.Cardano.Ledger.Binary.Cuddle\">CuddleData</a>","name":"huddleRoundTripAnnCborSpec","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:huddleRoundTripAnnCborSpec"},{"display_html":"<a href=\"#v:writeSpec\">writeSpec</a> &#8759; <a href=\"../cuddle/Codec-CBOR-Cuddle-Huddle.html#t:Huddle\" title=\"Codec.CBOR.Cuddle.Huddle\">Huddle</a> &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"writeSpec","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:writeSpec"},{"display_html":"<a href=\"#v:huddleRoundTripArbitraryValidate\">huddleRoundTripArbitraryValidate</a> &#8759; &#8704; a. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cuddle.html#t:CuddleData\" title=\"Test.Cardano.Ledger.Binary.Cuddle\">CuddleData</a>","name":"huddleRoundTripArbitraryValidate","module":"Test.Cardano.Ledger.Binary.Cuddle","link":"Test-Cardano-Ledger-Binary-Cuddle.html#v:huddleRoundTripArbitraryValidate"},{"display_html":"<a href=\"#v:cddlDecoderEquivalenceSpec\">cddlDecoderEquivalenceSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> a)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlData</a>","name":"cddlDecoderEquivalenceSpec","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:cddlDecoderEquivalenceSpec"},{"display_html":"<a href=\"#v:cddlRoundTripCborSpec\">cddlRoundTripCborSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlData</a>","name":"cddlRoundTripCborSpec","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:cddlRoundTripCborSpec"},{"display_html":"<a href=\"#v:cddlRoundTripExpectation\">cddlRoundTripExpectation</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a a &#8594; <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlVarFile\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlVarFile</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"cddlRoundTripExpectation","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:cddlRoundTripExpectation"},{"display_html":"<a href=\"#v:cddlRoundTripAnnCborSpec\">cddlRoundTripAnnCborSpec</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> a)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlData</a>","name":"cddlRoundTripAnnCborSpec","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:cddlRoundTripAnnCborSpec"},{"display_html":"<a href=\"#v:cddlRoundTripAnnExpectation\">cddlRoundTripAnnExpectation</a> &#8759; &#8704; a. (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding\">Annotator</a> a) &#8594; <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlVarFile\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlVarFile</a> &#8594; <a href=\"../hspec-core/Test-Hspec-Core-Spec.html#t:Expectation\" title=\"Test.Hspec.Core.Spec\">Expectation</a>","name":"cddlRoundTripAnnExpectation","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:cddlRoundTripAnnExpectation"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Cddl\">Cddl</a> = <a href=\"#v:Cddl\">Cddl</a> {<ul class=\"subs\"><li><a href=\"#v:unCddl\">unCddl</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li></ul>}","name":"Cddl Cddl unCddl","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#t:Cddl"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Cbor\">Cbor</a> = <a href=\"#v:Cbor\">Cbor</a> {<ul class=\"subs\"><li><a href=\"#v:unCbor\">unCbor</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li></ul>}","name":"Cbor Cbor unCbor","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#t:Cbor"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DiagCbor\">DiagCbor</a> = <a href=\"#v:DiagCbor\">DiagCbor</a> {<ul class=\"subs\"><li><a href=\"#v:unDiagCbor\">unDiagCbor</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li></ul>}","name":"DiagCbor DiagCbor unDiagCbor","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#t:DiagCbor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CddlData\">CddlData</a> = <a href=\"#v:CddlData\">CddlData</a> {<ul class=\"subs\"><li><a href=\"#v:cddlData\">cddlData</a> &#8759; !<a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:Cddl\" title=\"Test.Cardano.Ledger.Binary.Cddl\">Cddl</a></li><li><a href=\"#v:cddlNumExamples\">cddlNumExamples</a> &#8759; !<a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"CddlData CddlData cddlData cddlNumExamples","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CddlVarFile\">CddlVarFile</a> = <a href=\"#v:CddlVarFile\">CddlVarFile</a> {<ul class=\"subs\"><li><a href=\"#v:cddlVarFilePath\">cddlVarFilePath</a> &#8759; !<a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a></li><li><a href=\"#v:cddlVarName\">cddlVarName</a> &#8759; !<a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a></li><li><a href=\"#v:cddlVarData\">cddlVarData</a> &#8759; !<a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:Cddl\" title=\"Test.Cardano.Ledger.Binary.Cddl\">Cddl</a></li><li><a href=\"#v:cddlVarDiagCbor\">cddlVarDiagCbor</a> &#8759; ![<a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:DiagCbor\" title=\"Test.Cardano.Ledger.Binary.Cddl\">DiagCbor</a>]</li></ul>}","name":"CddlVarFile CddlVarFile cddlVarFilePath cddlVarName cddlVarData cddlVarDiagCbor","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlVarFile"},{"display_html":"<a href=\"#v:beforeAllCddlFile\">beforeAllCddlFile</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> [<a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>] &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:SpecWith\" title=\"Test.ImpSpec\">SpecWith</a> <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlData</a> &#8594; <a href=\"../ImpSpec/Test-ImpSpec.html#t:Spec\" title=\"Test.ImpSpec\">Spec</a>","name":"beforeAllCddlFile","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:beforeAllCddlFile"},{"display_html":"<a href=\"#v:withCddlVarFile\">withCddlVarFile</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlData\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlData</a> &#8594; (<a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:CddlVarFile\" title=\"Test.Cardano.Ledger.Binary.Cddl\">CddlVarFile</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"withCddlVarFile","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:withCddlVarFile"},{"display_html":"<a href=\"#v:genCddlDiagCbor\">genCddlDiagCbor</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:Cddl\" title=\"Test.Cardano.Ledger.Binary.Cddl\">Cddl</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> [<a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:DiagCbor\" title=\"Test.Cardano.Ledger.Binary.Cddl\">DiagCbor</a>]","name":"genCddlDiagCbor","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:genCddlDiagCbor"},{"display_html":"<a href=\"#v:diagCborToCbor\">diagCborToCbor</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:DiagCbor\" title=\"Test.Cardano.Ledger.Binary.Cddl\">DiagCbor</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"Test-Cardano-Ledger-Binary-Cddl.html#t:Cbor\" title=\"Test.Cardano.Ledger.Binary.Cddl\">Cbor</a>","name":"diagCborToCbor","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:diagCborToCbor"},{"display_html":"<a href=\"#v:validateCddlConformance\">validateCddlConformance</a> &#8759; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"validateCddlConformance","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:validateCddlConformance"},{"display_html":"<a href=\"#v:readProcessNoFailure\">readProcessNoFailure</a> &#8759; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> &#8594; <a href=\"../typed-process/System-Process-Typed-Internal.html#t:ProcessConfig\" title=\"System.Process.Typed.Internal\">ProcessConfig</a> stdin stdout stderr &#8594; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"readProcessNoFailure","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:readProcessNoFailure"},{"display_html":"<a href=\"#v:usingTempFile\">usingTempFile</a> &#8759; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; (<a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a) &#8594; <a href=\"../base/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"usingTempFile","module":"Test.Cardano.Ledger.Binary.Cddl","link":"Test-Cardano-Ledger-Binary-Cddl.html#v:usingTempFile"},{"display_html":"<a href=\"#v:byronProtVer\">byronProtVer</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a>","name":"byronProtVer","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:byronProtVer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:U\">U</a>","name":"U","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:U"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:U24\">U24</a>","name":"U24","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:U24"},{"display_html":"<a href=\"#v:extensionProperty\">extensionProperty</a> &#8759; &#8704; a. (<a href=\"../QuickCheck/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a) &#8658; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"extensionProperty","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:extensionProperty"},{"display_html":"<a href=\"#v:cborFlatTermValid\">cborFlatTermValid</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a &#8658; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"cborFlatTermValid","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:cborFlatTermValid"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SizeTestConfig\">SizeTestConfig</a> a = <a href=\"#v:SizeTestConfig\">SizeTestConfig</a> {<ul class=\"subs\"><li><a href=\"#v:debug\">debug</a> &#8759; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:gen\">gen</a> &#8759; <a href=\"../hedgehog/Hedgehog.html#t:Gen\" title=\"Hedgehog\">Gen</a> a</li><li><a href=\"#v:precise\">precise</a> &#8759; <a href=\"../base/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:addlCtx\">addlCtx</a> &#8759; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Map\" title=\"Cardano.Prelude\">Map</a> <a href=\"../base/Data-Typeable.html#t:TypeRep\" title=\"Data.Typeable\">TypeRep</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:SizeOverride\" title=\"Cardano.Ledger.Binary.Encoding\">SizeOverride</a></li><li><a href=\"#v:computedCtx\">computedCtx</a> &#8759; a &#8594; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Map\" title=\"Cardano.Prelude\">Map</a> <a href=\"../base/Data-Typeable.html#t:TypeRep\" title=\"Data.Typeable\">TypeRep</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:SizeOverride\" title=\"Cardano.Ledger.Binary.Encoding\">SizeOverride</a></li></ul>}","name":"SizeTestConfig SizeTestConfig gen debug precise addlCtx computedCtx","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig"},{"display_html":"<a href=\"#v:cfg\">cfg</a> &#8759; <a href=\"../formatting/Formatting-Buildable.html#t:Buildable\" title=\"Formatting.Buildable\">Buildable</a> a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a","name":"cfg","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:cfg"},{"display_html":"<a href=\"#v:scfg\">scfg</a> &#8759; <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a","name":"scfg","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:scfg"},{"display_html":"<a href=\"#v:sizeTest\">sizeTest</a> &#8759; &#8704; a. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a &#8594; <a href=\"../hedgehog/Hedgehog.html#t:Property\" title=\"Hedgehog\">Property</a>","name":"sizeTest","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:sizeTest"},{"display_html":"<a href=\"#v:goldenTestCBOR\">goldenTestCBOR</a> &#8759; &#8704; a. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../hedgehog/Hedgehog.html#t:Property\" title=\"Hedgehog\">Property</a>","name":"goldenTestCBOR","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestCBOR"},{"display_html":"<a href=\"#v:goldenTestCBORExplicit\">goldenTestCBORExplicit</a> &#8759; &#8704; a. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s a) &#8594; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../hedgehog/Hedgehog.html#t:Property\" title=\"Hedgehog\">Property</a>","name":"goldenTestCBORExplicit","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestCBORExplicit"},{"display_html":"<a href=\"#v:goldenTestExplicit\">goldenTestExplicit</a> &#8759; &#8704; a. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; (a &#8594; <a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>) &#8594; (<a href=\"../bytestring/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"../cardano-binary/Cardano-Binary.html#t:DecoderError\" title=\"Cardano.Binary\">DecoderError</a> a) &#8594; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../hedgehog/Hedgehog.html#t:Property\" title=\"Hedgehog\">Property</a>","name":"goldenTestExplicit","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestExplicit"},{"display_html":"<a href=\"#v:roundTripsCBORShow\">roundTripsCBORShow</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../hedgehog/Hedgehog.html#t:MonadTest\" title=\"Hedgehog\">MonadTest</a> m, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; m ()","name":"roundTripsCBORShow","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:roundTripsCBORShow"},{"display_html":"<a href=\"#v:roundTripsCBORBuildable\">roundTripsCBORBuildable</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../hedgehog/Hedgehog.html#t:MonadTest\" title=\"Hedgehog\">MonadTest</a> m, <a href=\"../formatting/Formatting-Buildable.html#t:Buildable\" title=\"Formatting.Buildable\">Buildable</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; m ()","name":"roundTripsCBORBuildable","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:roundTripsCBORBuildable"},{"display_html":"<a href=\"#v:compareHexDump\">compareHexDump</a> &#8759; (<a href=\"../hedgehog/Hedgehog.html#t:MonadTest\" title=\"Hedgehog\">MonadTest</a> m, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; HexDump &#8594; HexDump &#8594; m ()","name":"compareHexDump","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:compareHexDump"},{"display_html":"<a href=\"#v:deprecatedGoldenDecode\">deprecatedGoldenDecode</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../cardano-prelude/Cardano-Prelude.html#t:Text\" title=\"Cardano.Prelude\">Text</a> &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding\">Decoder</a> s ()) &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; <a href=\"../hedgehog/Hedgehog.html#t:Property\" title=\"Hedgehog\">Property</a>","name":"deprecatedGoldenDecode","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:deprecatedGoldenDecode"}]