{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE LambdaCase #-}

-- | This file is generated by "plutus-preprocessor:plutus-preprocessor"
module Test.Cardano.Ledger.Plutus.Examples where

import Cardano.Ledger.Plutus.Language (Plutus (..), PlutusBinary (..), SLanguage (..))
import Data.ByteString.Short (pack)

{- Preproceesed Plutus Script
alwaysSucceeds'2_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
alwaysSucceeds'2_0 _ _ = GHC.Tuple.Prim.()
-}

alwaysSucceeds2 :: SLanguage l -> Plutus l
alwaysSucceeds2 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [71, 1, 0, 0, 34, 18, 0, 17]
          SPlutusV2 -> [71, 1, 0, 0, 34, 18, 0, 17]
          SPlutusV3 -> [70, 1, 1, 0, 34, 128, 1]
          SPlutusV4 -> [70, 1, 1, 0, 34, 128, 1]
      )

{- Preproceesed Plutus Script
alwaysSucceeds'3_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
alwaysSucceeds'3_0 _ _ _ = GHC.Tuple.Prim.()
-}

alwaysSucceeds3 :: SLanguage l -> Plutus l
alwaysSucceeds3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [72, 1, 0, 0, 34, 33, 32, 1, 1]
          SPlutusV2 -> [72, 1, 0, 0, 34, 33, 32, 1, 1]
          SPlutusV3 -> [71, 1, 1, 0, 34, 40, 0, 1]
          SPlutusV4 -> [71, 1, 1, 0, 34, 40, 0, 1]
      )

{- Preproceesed Plutus Script
alwaysFails'2_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
alwaysFails'2_0 _ _ = PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

alwaysFails2 :: SLanguage l -> Plutus l
alwaysFails2 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [69, 1, 0, 0, 34, 97]
          SPlutusV2 -> [69, 1, 0, 0, 34, 97]
          SPlutusV3 -> [69, 1, 1, 0, 34, 97]
          SPlutusV4 -> [69, 1, 1, 0, 34, 97]
      )

{- Preproceesed Plutus Script
alwaysFails'3_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
alwaysFails'3_0 _ _ _ = PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

alwaysFails3 :: SLanguage l -> Plutus l
alwaysFails3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [70, 1, 0, 0, 34, 38, 1]
          SPlutusV2 -> [70, 1, 0, 0, 34, 38, 1]
          SPlutusV3 -> [70, 1, 1, 0, 34, 38, 1]
          SPlutusV4 -> [70, 1, 1, 0, 34, 38, 1]
      )

{- Preproceesed Plutus Script
guessTheNumber'2_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
guessTheNumber'2_0 d1_1 d2_2 = if d1_1 PlutusTx.Eq.== d2_2
                                then GHC.Tuple.Prim.()
                                else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

guessTheNumber2 :: SLanguage l -> Plutus l
guessTheNumber2 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [82, 1, 0, 0, 34, 83, 51, 87, 52, 102, 235, 192, 8, 0, 68, 72, 0, 69, 129]
          SPlutusV2 -> [82, 1, 0, 0, 34, 83, 51, 87, 52, 102, 235, 192, 8, 0, 68, 72, 0, 69, 129]
          SPlutusV3 -> [81, 1, 1, 0, 34, 83, 51, 87, 52, 102, 235, 192, 8, 0, 70, 0, 2, 193]
          SPlutusV4 -> [81, 1, 1, 0, 34, 83, 51, 87, 52, 102, 235, 192, 8, 0, 70, 0, 2, 193]
      )

{- Preproceesed Plutus Script
guessTheNumber'3_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData ->
                      PlutusTx.Builtins.Internal.BuiltinData -> ()
guessTheNumber'3_0 d1_1 d2_2 _d3_3 = if d1_1 PlutusTx.Eq.== d2_2
                                      then GHC.Tuple.Prim.()
                                      else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

guessTheNumber3 :: SLanguage l -> Plutus l
guessTheNumber3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [82, 1, 0, 0, 34, 37, 51, 53, 115, 70, 110, 188, 0, 192, 8, 68, 128, 4, 89]
          SPlutusV2 -> [82, 1, 0, 0, 34, 37, 51, 53, 115, 70, 110, 188, 0, 192, 8, 68, 128, 4, 89]
          SPlutusV3 -> [81, 1, 1, 0, 34, 37, 51, 53, 115, 70, 110, 188, 0, 192, 8, 96, 0, 45]
          SPlutusV4 -> [81, 1, 1, 0, 34, 37, 51, 53, 115, 70, 110, 188, 0, 192, 8, 96, 0, 45]
      )

{- Preproceesed Plutus Script
evendata'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData -> ()
evendata'_0 d1_1 _d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1
                                in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 0
                                    then GHC.Tuple.Prim.()
                                    else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

evendata3 :: SLanguage l -> Plutus l
evendata3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV2 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV3 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
          SPlutusV4 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
      )

{- Preproceesed Plutus Script
odddata'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
              PlutusTx.Builtins.Internal.BuiltinData ->
              PlutusTx.Builtins.Internal.BuiltinData -> ()
odddata'_0 d1_1 _d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 1
                                   then GHC.Tuple.Prim.()
                                   else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

odddata3 :: SLanguage l -> Plutus l
odddata3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV2 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV3 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
          SPlutusV4 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 13
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
      )

{- Preproceesed Plutus Script
evenRedeemer'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
evenRedeemer'_0 _d1_1 d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d2_2
                                    in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 0
                                        then GHC.Tuple.Prim.()
                                        else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

evenRedeemer3 :: SLanguage l -> Plutus l
evenRedeemer3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV2 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV3 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
          SPlutusV4 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 0
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
      )

{- Preproceesed Plutus Script
oddRedeemer'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                  PlutusTx.Builtins.Internal.BuiltinData ->
                  PlutusTx.Builtins.Internal.BuiltinData -> ()
oddRedeemer'_0 _d1_1 d2_2 _d3_3 = let n_4 = PlutusTx.Builtins.unsafeDataAsI d2_2
                                   in if PlutusTx.Prelude.modulo n_4 2 PlutusTx.Eq.== 1
                                       then GHC.Tuple.Prim.()
                                       else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

oddRedeemer3 :: SLanguage l -> Plutus l
oddRedeemer3 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV2 ->
            [ 88
            , 26
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 17
            , 32
            , 1
            , 22
            , 1
            ]
          SPlutusV3 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
          SPlutusV4 ->
            [ 88
            , 25
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 2
            , 51
            , 112
            , 198
            , 235
            , 64
            , 9
            , 32
            , 4
            , 24
            , 0
            , 11
            , 1
            ]
      )

{- Preproceesed Plutus Script
sumsTo10'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData ->
               PlutusTx.Builtins.Internal.BuiltinData -> ()
sumsTo10'_0 d1_1 d2_2 _d3_3 = let {n_4 = PlutusTx.Builtins.unsafeDataAsI d1_1;
                                   m_5 = PlutusTx.Builtins.unsafeDataAsI d2_2}
                               in if (m_5 PlutusTx.Numeric.+ n_4) PlutusTx.Eq.== 10
                                   then GHC.Tuple.Prim.()
                                   else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

sumsTo103 :: SLanguage l -> Plutus l
sumsTo103 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 27
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 20
            , 51
            , 112
            , 6
            , 235
            , 64
            , 8
            , 221
            , 104
            , 1
            , 136
            , 144
            , 0
            , 139
            , 1
            ]
          SPlutusV2 ->
            [ 88
            , 27
            , 1
            , 0
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 20
            , 51
            , 112
            , 6
            , 235
            , 64
            , 8
            , 221
            , 104
            , 1
            , 136
            , 144
            , 0
            , 139
            , 1
            ]
          SPlutusV3 ->
            [ 88
            , 26
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 20
            , 51
            , 112
            , 6
            , 235
            , 64
            , 8
            , 221
            , 104
            , 1
            , 140
            , 0
            , 5
            , 129
            ]
          SPlutusV4 ->
            [ 88
            , 26
            , 1
            , 1
            , 0
            , 34
            , 37
            , 51
            , 53
            , 115
            , 70
            , 110
            , 29
            , 32
            , 20
            , 51
            , 112
            , 6
            , 235
            , 64
            , 8
            , 221
            , 104
            , 1
            , 140
            , 0
            , 5
            , 129
            ]
      )

{- Preproceesed Plutus Script
oddRedeemer2'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                   PlutusTx.Builtins.Internal.BuiltinData -> ()
oddRedeemer2'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                              in if PlutusTx.Prelude.modulo n_3 2 PlutusTx.Eq.== 1
                                  then GHC.Tuple.Prim.()
                                  else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

oddRedeemer2 :: SLanguage l -> Plutus l
oddRedeemer2 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 25
            , 1
            , 0
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 35
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 18
            , 0
            , 17
            , 97
            ]
          SPlutusV2 ->
            [ 88
            , 25
            , 1
            , 0
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 35
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 18
            , 0
            , 17
            , 97
            ]
          SPlutusV3 ->
            [ 88
            , 24
            , 1
            , 1
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 35
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 128
            , 0
            , 177
            ]
          SPlutusV4 ->
            [ 88
            , 24
            , 1
            , 1
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 35
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 128
            , 0
            , 177
            ]
      )

{- Preproceesed Plutus Script
evenRedeemer2'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                    PlutusTx.Builtins.Internal.BuiltinData -> ()
evenRedeemer2'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if PlutusTx.Prelude.modulo n_3 2 PlutusTx.Eq.== 0
                                   then GHC.Tuple.Prim.()
                                   else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

evenRedeemer2 :: SLanguage l -> Plutus l
evenRedeemer2 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 ->
            [ 88
            , 25
            , 1
            , 0
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 3
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 18
            , 0
            , 17
            , 97
            ]
          SPlutusV2 ->
            [ 88
            , 25
            , 1
            , 0
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 3
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 18
            , 0
            , 17
            , 97
            ]
          SPlutusV3 ->
            [ 88
            , 24
            , 1
            , 1
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 3
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 128
            , 0
            , 177
            ]
          SPlutusV4 ->
            [ 88
            , 24
            , 1
            , 1
            , 0
            , 34
            , 83
            , 51
            , 87
            , 52
            , 102
            , 225
            , 210
            , 0
            , 3
            , 55
            , 12
            , 110
            , 180
            , 0
            , 146
            , 0
            , 65
            , 128
            , 0
            , 177
            ]
      )

{- Preproceesed Plutus Script
redeemerIs102'_0 :: PlutusTx.Builtins.Internal.BuiltinData ->
                    PlutusTx.Builtins.Internal.BuiltinData -> ()
redeemerIs102'_0 d1_1 _d3_2 = let n_3 = PlutusTx.Builtins.unsafeDataAsI d1_1
                               in if n_3 PlutusTx.Eq.== 10
                                   then GHC.Tuple.Prim.()
                                   else PlutusTx.Builtins.error GHC.Tuple.Prim.()
-}

redeemerIs102 :: SLanguage l -> Plutus l
redeemerIs102 =
  Plutus
    . PlutusBinary
    . pack
    . ( \case
          SPlutusV1 -> [84, 1, 0, 0, 34, 83, 51, 87, 52, 102, 225, 210, 1, 67, 117, 160, 4, 34, 64, 2, 45]
          SPlutusV2 -> [84, 1, 0, 0, 34, 83, 51, 87, 52, 102, 225, 210, 1, 67, 117, 160, 4, 34, 64, 2, 45]
          SPlutusV3 -> [84, 1, 1, 0, 34, 83, 51, 87, 52, 102, 225, 210, 1, 67, 117, 160, 4, 48, 0, 22, 1]
          SPlutusV4 -> [84, 1, 1, 0, 34, 83, 51, 87, 52, 102, 225, 210, 1, 67, 117, 160, 4, 48, 0, 22, 1]
      )
